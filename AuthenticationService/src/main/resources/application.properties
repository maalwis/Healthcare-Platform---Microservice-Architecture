spring.application.name=AuthenticationService
server.port=8080

# HashCorp vault
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.authentication=TOKEN
spring.cloud.vault.token=${VAULT_TOKEN}
spring.cloud.vault.scheme=http
spring.cloud.vault.host=127.0.0.1
spring.cloud.vault.port=8200
spring.config.import: vault://

##database
## PostgreSQL connection settings
#spring.datasource.url=jdbc:postgresql://localhost:5432/AuthenticationService
#spring.datasource.username=postgres
#spring.datasource.password=alwis
#spring.datasource.driver-class-name=org.postgresql.Driver


# JPA / Hibernate settings (optional, but useful)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# how many months until credentials expire (default 3)
user.credentials-expiry-months=3

# how many months until account expires (default 12)
user.account-expiry-months=12

##Eureka
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#
##Zipkin
#management.tracing.sampling.probability=1.0
#
## force Eureka to register this instance under ?localhost:<port>?
#eureka.instance.hostname=localhost
#
## give it a clean instance ID (optional)
#eureka.instance.instance-id=${spring.application.name}:${server.port}
