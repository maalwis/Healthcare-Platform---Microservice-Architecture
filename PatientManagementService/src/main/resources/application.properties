spring.application.name=PatientManagementService
server.port=8086

#database
# PostgreSQL connection settings
spring.datasource.url=jdbc:postgresql://localhost:5432/PatientManagementService
spring.datasource.username=postgres
spring.datasource.password=alwis
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate settings (optional, but useful)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

#Zipkin
management.tracing.sampling.probability=1.0

# force Eureka to register this instance under ?localhost:<port>?
eureka.instance.hostname=localhost

# give it a clean instance ID (optional)
eureka.instance.instance-id=${spring.application.name}:${server.port}


# Resilience4J
resilience4j.circuitbreaker.instances.authBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.authBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.authBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.authBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.authBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.authBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.authBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.authBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.authBreaker.sliding-window-type=count_based

# Actuator configuration
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always